{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _redux = require(\"redux\");\n\nvar _reduxLogger = require(\"redux-logger\");\n\nvar _developmentOnly = require(\"redux-devtools-extension/developmentOnly\");\n\nvar _reduxSaga = _interopRequireDefault(require(\"redux-saga\"));\n\nvar _sagas = _interopRequireDefault(require(\"./sagas\"));\n\nvar _reducer = _interopRequireDefault(require(\"./reducer\"));\n\nconst middleWare = [];\nconst sagaMiddleware = (0, _reduxSaga.default)();\nmiddleWare.push(sagaMiddleware);\nconst loggerMiddleware = (0, _reduxLogger.createLogger)({\n  predicate: () => process.env.NODE_ENV === \"development\"\n});\nmiddleWare.push(loggerMiddleware);\nconst createStoreWithMiddleware = (0, _developmentOnly.composeWithDevTools)((0, _redux.applyMiddleware)(...middleWare))(_redux.createStore);\n\nconst makeStore = initialState => {\n  const store = createStoreWithMiddleware(_reducer.default, initialState);\n\n  store.runSagaTask = () => {\n    store.sagaTask = sagaMiddleware.run(_sagas.default);\n  };\n\n  store.runSagaTask();\n  return store;\n};\n\nvar _default = makeStore;\nexports.default = _default;","map":{"version":3,"sources":["/home/arma/My/Software/Projects/Story_SSR_Custom/store/index.js"],"names":["middleWare","sagaMiddleware","push","loggerMiddleware","predicate","process","env","NODE_ENV","createStoreWithMiddleware","createStore","makeStore","initialState","store","reducer","runSagaTask","sagaTask","run","rootSaga"],"mappings":";;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAMA,UAAU,GAAG,EAAnB;AAEA,MAAMC,cAAc,GAAG,yBAAvB;AACAD,UAAU,CAACE,IAAX,CAAgBD,cAAhB;AAEA,MAAME,gBAAgB,GAAG,+BAAa;AACrCC,EAAAA,SAAS,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AADL,CAAb,CAAzB;AAGAP,UAAU,CAACE,IAAX,CAAgBC,gBAAhB;AAEA,MAAMK,yBAAyB,GAAG,0CAAoB,4BAAgB,GAAGR,UAAnB,CAApB,EAAoDS,kBAApD,CAAlC;;AAEA,MAAMC,SAAS,GAAGC,YAAY,IAAI;AACjC,QAAMC,KAAK,GAAGJ,yBAAyB,CAACK,gBAAD,EAAUF,YAAV,CAAvC;;AAEAC,EAAAA,KAAK,CAACE,WAAN,GAAoB,MAAM;AACzBF,IAAAA,KAAK,CAACG,QAAN,GAAiBd,cAAc,CAACe,GAAf,CAAmBC,cAAnB,CAAjB;AACA,GAFD;;AAGAL,EAAAA,KAAK,CAACE,WAAN;AAEA,SAAOF,KAAP;AACA,CATD;;eAWeF,S","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"store/sagas\";\nimport reducer from \"store/reducer\";\n\nconst middleWare = [];\n\nconst sagaMiddleware = createSagaMiddleware();\nmiddleWare.push(sagaMiddleware);\n\nconst loggerMiddleware = createLogger({\n\tpredicate: () => process.env.NODE_ENV === \"development\"\n});\nmiddleWare.push(loggerMiddleware);\n\nconst createStoreWithMiddleware = composeWithDevTools(applyMiddleware(...middleWare))(createStore);\n\nconst makeStore = initialState => {\n\tconst store = createStoreWithMiddleware(reducer, initialState);\n\n\tstore.runSagaTask = () => {\n\t\tstore.sagaTask = sagaMiddleware.run(rootSaga);\n\t};\n\tstore.runSagaTask();\n\n\treturn store;\n};\n\nexport default makeStore;\n"]},"metadata":{},"sourceType":"script"}