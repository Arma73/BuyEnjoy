{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactSizes = _interopRequireDefault(require(\"react-sizes\"));\n\nvar _viewports = _interopRequireDefault(require(\"../../utils/constants/viewports\"));\n\nvar _getDisplayName = _interopRequireDefault(require(\"../../utils/getDisplayName\"));\n\nconst mapSizes = (_ref) => {\n  let width = _ref.width;\n  return {\n    isMobile: width < _viewports.default.TABLET,\n    isTablet: width < _viewports.default.DESKTOP && width > _viewports.default.TABLET,\n    isDesktop: width > _viewports.default.DESKTOP\n  };\n};\n\nconst withViewportDetection = WrappedComponent => {\n  const ComponentWithViewportDetection = (0, _reactSizes.default)(mapSizes)(WrappedComponent);\n\n  const HOC = props => _react.default.createElement(ComponentWithViewportDetection, props);\n\n  HOC.displayName = \"withViewportDetection(\".concat((0, _getDisplayName.default)(WrappedComponent), \")\");\n  return HOC;\n};\n\nvar _default = withViewportDetection;\nexports.default = _default;","map":{"version":3,"sources":["/home/arma/My/Software/Projects/Story_SSR_Custom/containers/Hocs/WithViewportDetection.jsx"],"names":["mapSizes","width","isMobile","VIEWPORTS","TABLET","isTablet","DESKTOP","isDesktop","withViewportDetection","WrappedComponent","ComponentWithViewportDetection","HOC","props","displayName"],"mappings":";;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,MAAMA,QAAQ,GAAG;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAgB;AAChCC,IAAAA,QAAQ,EAAED,KAAK,GAAGE,mBAAUC,MADI;AAEhCC,IAAAA,QAAQ,EAAEJ,KAAK,GAAGE,mBAAUG,OAAlB,IAA6BL,KAAK,GAAGE,mBAAUC,MAFzB;AAGhCG,IAAAA,SAAS,EAAEN,KAAK,GAAGE,mBAAUG;AAHG,GAAhB;AAAA,CAAjB;;AAMA,MAAME,qBAAqB,GAAGC,gBAAgB,IAAI;AACjD,QAAMC,8BAA8B,GAAG,yBAAUV,QAAV,EAAoBS,gBAApB,CAAvC;;AAEA,QAAME,GAAG,GAAGC,KAAK,IAAI,6BAAC,8BAAD,EAAoCA,KAApC,CAArB;;AACAD,EAAAA,GAAG,CAACE,WAAJ,mCAA2C,6BAAeJ,gBAAf,CAA3C;AAEA,SAAOE,GAAP;AACA,CAPD;;eASeH,qB","sourcesContent":["import React from \"react\";\nimport withSizes from \"react-sizes\";\nimport VIEWPORTS from \"utils/constants/viewports\";\nimport getDisplayName from \"utils/getDisplayName\";\n\nconst mapSizes = ({ width }) => ({\n\tisMobile: width < VIEWPORTS.TABLET,\n\tisTablet: width < VIEWPORTS.DESKTOP && width > VIEWPORTS.TABLET,\n\tisDesktop: width > VIEWPORTS.DESKTOP\n});\n\nconst withViewportDetection = WrappedComponent => {\n\tconst ComponentWithViewportDetection = withSizes(mapSizes)(WrappedComponent);\n\n\tconst HOC = props => <ComponentWithViewportDetection {...props} />;\n\tHOC.displayName = `withViewportDetection(${getDisplayName(WrappedComponent)})`;\n\n\treturn HOC;\n};\n\nexport default withViewportDetection;\n"]},"metadata":{},"sourceType":"script"}