{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs2/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = TemporaryDrawer;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectSpread\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _styles = require(\"@material-ui/core/styles\");\n\nvar _Drawer = _interopRequireDefault(require(\"@material-ui/core/Drawer\"));\n\nvar _List = _interopRequireDefault(require(\"@material-ui/core/List\"));\n\nvar _Divider = _interopRequireDefault(require(\"@material-ui/core/Divider\"));\n\nvar _Toggle = _interopRequireDefault(require(\"./Toggle\"));\n\nvar _ListItem = _interopRequireDefault(require(\"@material-ui/core/ListItem\"));\n\nvar _ListItemText = _interopRequireDefault(require(\"@material-ui/core/ListItemText\"));\n\nrequire(\"./TemporaryDrawer.scss\");\n\nvar _jsxFileName = \"/home/arma/My/Software/Projects/Story_SSR_Custom/components/Drawer/TemporaryDrawer.jsx\";\nconst useStyles = (0, _styles.makeStyles)({\n  list: {\n    width: \"80vw\"\n  }\n});\n\nfunction TemporaryDrawer({\n  Mocks\n}) {\n  const classes = useStyles();\n  const [state, setState] = (0, _react.useState)({\n    right: false,\n    sub: {\n      open: false,\n      id: \"\"\n    }\n  });\n  const {\n    lists\n  } = Mocks();\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState((0, _objectSpread2.default)({}, state, {\n      [side]: open\n    }));\n  };\n\n  const toggleSub = (id, open) => toggleDrawer(\"sub\", {\n    open,\n    id\n  });\n\n  const getById = id => lists.sections.filter(item => item.id === id)[0];\n\n  const sideList = side => _react.default.createElement(\"div\", {\n    className: classes.list,\n    role: \"presentation\" //onClick={toggleDrawer(side, false)}\n    ,\n    onKeyDown: toggleDrawer(side, false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, state.sub.open ? _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"button\", {\n    type: \"button\",\n    onClick: toggleSub(\"\", false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" \", \"Back\", \" \"), _react.default.createElement(_Divider.default, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })) : null, _react.default.createElement(_List.default, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, state.sub.open ? getById(state.sub.id).subsection.map(category => _react.default.createElement(_List.default, {\n    key: category.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, _react.default.createElement(_ListItem.default, {\n    button: true,\n    key: category.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, _react.default.createElement(_ListItemText.default, {\n    primary: category.mainSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), category.sectionKinds.length ? category.sectionKinds.map(kind => _react.default.createElement(\"div\", {\n    key: kind,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, kind)) : null)) : lists.sections.map(category => _react.default.createElement(_ListItem.default, {\n    onClick: toggleSub(category.id, true),\n    button: true,\n    key: category.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, _react.default.createElement(_ListItemText.default, {\n    primary: category.mainSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })))), _react.default.createElement(_Divider.default, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }));\n\n  return _react.default.createElement(\"div\", {\n    className: (0, _clsx.default)(\"Drawer_right\", {\n      open: state.right\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, _react.default.createElement(_Toggle.default, {\n    handleClick: toggleDrawer(\"right\", !state.right),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), _react.default.createElement(_Drawer.default, {\n    anchor: \"right\",\n    open: state.right,\n    onClose: toggleDrawer(\"right\", false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, sideList(\"right\")));\n}","map":{"version":3,"sources":["/home/arma/My/Software/Projects/Story_SSR_Custom/components/Drawer/TemporaryDrawer.jsx"],"names":["useStyles","list","width","TemporaryDrawer","Mocks","classes","state","setState","right","sub","open","id","lists","toggleDrawer","side","event","type","key","toggleSub","getById","sections","filter","item","sideList","subsection","map","category","mainSection","sectionKinds","length","kind"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Toggle from \"./Toggle\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport \"./TemporaryDrawer.scss\";\n\nconst useStyles = makeStyles({\n\tlist: {\n\t\twidth: \"80vw\"\n\t}\n});\n\nexport default function TemporaryDrawer({ Mocks }) {\n\tconst classes = useStyles();\n\tconst [state, setState] = useState({\n\t\tright: false,\n\t\tsub: {\n\t\t\topen: false,\n\t\t\tid: \"\"\n\t\t}\n\t});\n\tconst { lists } = Mocks();\n\n\tconst toggleDrawer = (side, open) => event => {\n\t\tif (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n\t\t\treturn;\n\t\t}\n\t\tsetState({ ...state, [side]: open });\n\t};\n\n\tconst toggleSub = (id, open) => toggleDrawer(\"sub\", { open, id });\n\n\tconst getById = id => lists.sections.filter(item => item.id === id)[0];\n\n\tconst sideList = side => (\n\t\t<div\n\t\t\tclassName={classes.list}\n\t\t\trole=\"presentation\"\n\t\t\t//onClick={toggleDrawer(side, false)}\n\t\t\tonKeyDown={toggleDrawer(side, false)}\n\t\t>\n\t\t\t{state.sub.open ? (\n\t\t\t\t<>\n\t\t\t\t\t<button type=\"button\" onClick={toggleSub(\"\", false)}>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tBack{\" \"}\n\t\t\t\t\t</button>\n\t\t\t\t\t<Divider />\n\t\t\t\t</>\n\t\t\t) : null}\n\t\t\t<List>\n\t\t\t\t{state.sub.open\n\t\t\t\t\t? getById(state.sub.id).subsection.map(category => (\n\t\t\t\t\t\t<List key={category.id}>\n\t\t\t\t\t\t\t<ListItem button key={category.id}>\n\t\t\t\t\t\t\t\t<ListItemText primary={category.mainSection} />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t{category.sectionKinds.length\n\t\t\t\t\t\t\t\t? category.sectionKinds.map(kind => (\n\t\t\t\t\t\t\t\t\t<div key={kind}>{kind}</div>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t))\n\t\t\t\t\t: lists.sections.map(category => (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tonClick={toggleSub(category.id, true)}\n\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\tkey={category.id}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListItemText primary={category.mainSection} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t</List>\n\t\t\t<Divider />\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div className={clsx(\"Drawer_right\", { open: state.right })}>\n\t\t\t<Toggle handleClick={toggleDrawer(\"right\", !state.right)} />\n\t\t\t<Drawer anchor=\"right\" open={state.right} onClose={toggleDrawer(\"right\", false)}>\n\t\t\t\t{sideList(\"right\")}\n\t\t\t</Drawer>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"script"}