{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectWithoutProperties\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _SvgIcon = _interopRequireDefault(require(\"../../Icons/SvgIcon\"));\n\nvar _ShowUp = require(\"../../ShowUp\");\n\nrequire(\"./Select.scss\");\n\nconst SelectOption = (_ref) => {\n  let onChange = _ref.onChange,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"onChange\"]);\n\n  const handleSelect = () => onChange((0, _objectSpread2.default)({}, rest));\n\n  return _react.default.createElement(\"div\", {\n    role: \"button\",\n    className: \"SelectOption\",\n    onClick: handleSelect\n  }, rest.label);\n};\n\nconst ShowOptions = (_ref2) => {\n  let options = _ref2.options,\n      handleChange = _ref2.handleChange;\n  return (//eslint-disable-next-line implicit-arrow-linebreak\n    options.map(option => _react.default.createElement(SelectOption, (0, _extends2.default)({\n      key: option.id\n    }, option, {\n      onChange: handleChange\n    })))\n  );\n};\n\nconst Select = (_ref3) => {\n  let children = _ref3.children,\n      className = _ref3.className,\n      options = _ref3.options,\n      value = _ref3.value,\n      name = _ref3.name,\n      size = _ref3.size,\n      onChange = _ref3.onChange,\n      invalid = _ref3.invalid,\n      disabled = _ref3.disabled,\n      restProps = (0, _objectWithoutProperties2.default)(_ref3, [\"children\", \"className\", \"options\", \"value\", \"name\", \"size\", \"onChange\", \"invalid\", \"disabled\"]);\n\n  const handleChange = option => {\n    const id = option.id;\n    const e = {\n      target: {\n        name,\n        value: id,\n        type: \"select\"\n      }\n    };\n    onChange(e, option.id, option);\n  };\n\n  const findOption = option => option.label === value;\n\n  const selectedOption = options.find(findOption);\n  const compositeClassName = (0, _clsx.default)(\"Select\", size, {\n    [className]: className,\n    invalid,\n    disabled\n  });\n  return _react.default.createElement(_ShowUp.ClickShow, (0, _extends2.default)({\n    className: compositeClassName,\n    onChange: handleChange,\n    Component: ShowOptions,\n    options: options\n  }, restProps), _react.default.createElement(\"div\", {\n    role: \"button\",\n    className: \"selected\"\n  }, _react.default.createElement(\"span\", {\n    className: \"selected_label\"\n  }, selectedOption.label), _react.default.createElement(_SvgIcon.default, {\n    icon: \"arrow-down\"\n  })));\n};\n\nSelect.defaultProps = {\n  size: \"md\"\n};\nvar _default = Select;\nexports.default = _default;","map":{"version":3,"sources":["/home/arma/My/Software/Projects/Story_SSR_Custom/components/Form/SelectForms/Select.jsx"],"names":["SelectOption","onChange","rest","handleSelect","label","ShowOptions","options","handleChange","map","option","id","Select","children","className","value","name","size","invalid","disabled","restProps","e","target","type","findOption","selectedOption","find","compositeClassName","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AAEA;;AAEA,MAAMA,YAAY,GAAG,UAA2B;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAXC,IAAW;;AAC/C,QAAMC,YAAY,GAAG,MAAMF,QAAQ,iCAAMC,IAAN,EAAnC;;AACA,SACC;AACC,IAAA,IAAI,EAAC,QADN;AAEC,IAAA,SAAS,EAAC,cAFX;AAGC,IAAA,OAAO,EAAEC;AAHV,KAKED,IAAI,CAACE,KALP,CADD;AASA,CAXD;;AAiBA,MAAMC,WAAW,GAAG;AAAA,MAAGC,OAAH,SAAGA,OAAH;AAAA,MAAYC,YAAZ,SAAYA,YAAZ;AAAA,SACnB;AACAD,IAAAA,OAAO,CAACE,GAAR,CAAYC,MAAM,IAAI,6BAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,MAAM,CAACC;AAA1B,OAAkCD,MAAlC;AAA0C,MAAA,QAAQ,EAAEF;AAApD,OAAtB;AAFmB;AAAA,CAApB;;AAIA,MAAMI,MAAM,GAAG,WAWT;AAAA,MAVLC,QAUK,SAVLA,QAUK;AAAA,MATLC,SASK,SATLA,SASK;AAAA,MARLP,OAQK,SARLA,OAQK;AAAA,MAPLQ,KAOK,SAPLA,KAOK;AAAA,MANLC,IAMK,SANLA,IAMK;AAAA,MALLC,IAKK,SALLA,IAKK;AAAA,MAJLf,QAIK,SAJLA,QAIK;AAAA,MAHLgB,OAGK,SAHLA,OAGK;AAAA,MAFLC,QAEK,SAFLA,QAEK;AAAA,MADFC,SACE;;AACL,QAAMZ,YAAY,GAAGE,MAAM,IAAI;AAAA,UACtBC,EADsB,GACfD,MADe,CACtBC,EADsB;AAE9B,UAAMU,CAAC,GAAG;AACTC,MAAAA,MAAM,EAAE;AACPN,QAAAA,IADO;AAEPD,QAAAA,KAAK,EAAEJ,EAFA;AAGPY,QAAAA,IAAI,EAAE;AAHC;AADC,KAAV;AAOArB,IAAAA,QAAQ,CAACmB,CAAD,EAAIX,MAAM,CAACC,EAAX,EAAeD,MAAf,CAAR;AACA,GAVD;;AAYA,QAAMc,UAAU,GAAGd,MAAM,IAAIA,MAAM,CAACL,KAAP,KAAiBU,KAA9C;;AACA,QAAMU,cAAc,GAAGlB,OAAO,CAACmB,IAAR,CAAaF,UAAb,CAAvB;AACA,QAAMG,kBAAkB,GAAG,mBAAK,QAAL,EAAeV,IAAf,EAAqB;AAC/C,KAACH,SAAD,GAAaA,SADkC;AAE/CI,IAAAA,OAF+C;AAG/CC,IAAAA;AAH+C,GAArB,CAA3B;AAMA,SACC,6BAAC,iBAAD;AACC,IAAA,SAAS,EAAEQ,kBADZ;AAEC,IAAA,QAAQ,EAAEnB,YAFX;AAGC,IAAA,SAAS,EAAEF,WAHZ;AAIC,IAAA,OAAO,EAAEC;AAJV,KAKKa,SALL,GAOC;AAAK,IAAA,IAAI,EAAC,QAAV;AAAmB,IAAA,SAAS,EAAC;AAA7B,KACC;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAkCK,cAAc,CAACpB,KAAjD,CADD,EAEC,6BAAC,gBAAD;AAAS,IAAA,IAAI,EAAC;AAAd,IAFD,CAPD,CADD;AAcA,CA9CD;;AAgDAO,MAAM,CAACgB,YAAP,GAAsB;AACrBX,EAAAA,IAAI,EAAE;AADe,CAAtB;eAiBeL,M","sourcesContent":["import * as PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport SvgIcon from \"components/Icons/SvgIcon\";\nimport { ClickShow } from \"components/ShowUp\";\n\nimport \"./Select.scss\";\n\nconst SelectOption = ({ onChange, ...rest }) => {\n\tconst handleSelect = () => onChange({ ...rest });\n\treturn (\n\t\t<div\n\t\t\trole=\"button\"\n\t\t\tclassName=\"SelectOption\"\n\t\t\tonClick={handleSelect}\n\t\t>\n\t\t\t{rest.label}\n\t\t</div>\n\t);\n};\n\nSelectOption.propTypes = {\n\tonChange: PropTypes.func.isRequired\n};\n\nconst ShowOptions = ({ options, handleChange }) =>\n\t//eslint-disable-next-line implicit-arrow-linebreak\n\toptions.map(option => <SelectOption key={option.id} {...option} onChange={handleChange} />);\n\nconst Select = ({\n\tchildren,\n\tclassName,\n\toptions,\n\tvalue,\n\tname,\n\tsize,\n\tonChange,\n\tinvalid,\n\tdisabled,\n\t...restProps\n}) => {\n\tconst handleChange = option => {\n\t\tconst { id } = option;\n\t\tconst e = {\n\t\t\ttarget: {\n\t\t\t\tname,\n\t\t\t\tvalue: id,\n\t\t\t\ttype: \"select\"\n\t\t\t}\n\t\t};\n\t\tonChange(e, option.id, option);\n\t};\n\n\tconst findOption = option => option.label === value;\n\tconst selectedOption = options.find(findOption);\n\tconst compositeClassName = clsx(\"Select\", size, {\n\t\t[className]: className,\n\t\tinvalid,\n\t\tdisabled\n\t});\n\n\treturn (\n\t\t<ClickShow\n\t\t\tclassName={compositeClassName}\n\t\t\tonChange={handleChange}\n\t\t\tComponent={ShowOptions}\n\t\t\toptions={options}\n\t\t\t{...restProps}\n\t\t>\n\t\t\t<div role=\"button\" className=\"selected\">\n\t\t\t\t<span className=\"selected_label\">{selectedOption.label}</span>\n\t\t\t\t<SvgIcon icon=\"arrow-down\" />\n\t\t\t</div>\n\t\t</ClickShow>\n\t);\n};\n\nSelect.defaultProps = {\n\tsize: \"md\"\n};\n\nSelect.propTypes = {\n\tclassName: PropTypes.string,\n\tdisabled: PropTypes.bool,\n\tinvalid: PropTypes.bool,\n\tname: PropTypes.string,\n\tonChange: PropTypes.func.isRequired,\n\toptions: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.shape({})])\n\t),\n\tsize: PropTypes.oneOf([\"sm\", \"md\", \"lg\", \"lg_m\"]),\n\tvalue: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.shape({})])\n};\n\nexport default Select;\n"]},"metadata":{},"sourceType":"script"}