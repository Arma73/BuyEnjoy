{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs2/helpers/interopRequireWildcard\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/slicedToArray\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _Block = require(\"../Block\");\n\nrequire(\"./ShowInput.scss\");\n\nconst ShowInput = (_ref) => {\n  let children = _ref.children,\n      Component = _ref.Component,\n      className = _ref.className,\n      value = _ref.value,\n      focus = _ref.focus;\n\n  const _useState = (0, _react.useState)(false),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n        isShow = _useState2[0],\n        setIsShow = _useState2[1];\n\n  const handleClose = () => {\n    setIsShow(false);\n  };\n\n  const handleOpen = () => {\n    setIsShow(true);\n  }; //const handleToggle = () => (isShow ? handleClose() : handleOpen());\n\n\n  (0, _react.useEffect)(() => {\n    if (value.length > 1 && focus) {\n      handleOpen();\n    } else handleClose();\n\n    return () => handleClose();\n  }, [value, focus]); //const memoizedValue = useMemo(() => value.length > 1, [value]);\n\n  const compositeClassName = (0, _clsx.default)(\"ShowInput\", {\n    [className]: className,\n    opened: isShow\n  });\n  return _react.default.createElement(\"div\", {\n    className: compositeClassName\n  }, children, _react.default.createElement(_Block.BlockContainer, {\n    className: \"ShowInput_Element\"\n  }, _react.default.createElement(Component, {\n    className: \"ShowInput_Element_Component\"\n  })));\n};\n\nvar _default = ShowInput;\nexports.default = _default;","map":{"version":3,"sources":["/home/arma/My/Software/Projects/Story_SSR_Custom/components/ShowUp/ShowInput.jsx"],"names":["ShowInput","children","Component","className","value","focus","isShow","setIsShow","handleClose","handleOpen","length","compositeClassName","opened"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AAEA;;AACA;;AAEA;;AAEA,MAAMA,SAAS,GAAG,UAAsD;AAAA,MAAnDC,QAAmD,QAAnDA,QAAmD;AAAA,MAAzCC,SAAyC,QAAzCA,SAAyC;AAAA,MAA9BC,SAA8B,QAA9BA,SAA8B;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,oBAC3C,qBAAS,KAAT,CAD2C;AAAA;AAAA,QAChEC,MADgE;AAAA,QACxDC,SADwD;;AAGvE,QAAMC,WAAW,GAAG,MAAM;AACzBD,IAAAA,SAAS,CAAC,KAAD,CAAT;AACA,GAFD;;AAIA,QAAME,UAAU,GAAG,MAAM;AACxBF,IAAAA,SAAS,CAAC,IAAD,CAAT;AACA,GAFD,CAPuE,CAUvE;;;AAEA,wBAAU,MAAM;AACf,QAAIH,KAAK,CAACM,MAAN,GAAe,CAAf,IAAoBL,KAAxB,EAA+B;AAC9BI,MAAAA,UAAU;AACV,KAFD,MAEOD,WAAW;;AAClB,WAAO,MAAMA,WAAW,EAAxB;AACA,GALD,EAKG,CAACJ,KAAD,EAAQC,KAAR,CALH,EAZuE,CAmBvE;;AAEA,QAAMM,kBAAkB,GAAG,mBAAK,WAAL,EAAkB;AAC5C,KAACR,SAAD,GAAaA,SAD+B;AAE5CS,IAAAA,MAAM,EAAEN;AAFoC,GAAlB,CAA3B;AAKA,SACC;AAAK,IAAA,SAAS,EAAEK;AAAhB,KACEV,QADF,EAEC,6BAAC,qBAAD;AAAgB,IAAA,SAAS,EAAC;AAA1B,KACC,6BAAC,SAAD;AAAW,IAAA,SAAS,EAAC;AAArB,IADD,CAFD,CADD;AAQA,CAlCD;;eA0CeD,S","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { string, bool } from \"prop-types\";\nimport clsx from \"clsx\";\nimport { BlockContainer } from \"components/Block\";\n\nimport \"./ShowInput.scss\";\n\nconst ShowInput = ({ children, Component, className, value, focus }) => {\n\tconst [isShow, setIsShow] = useState(false);\n\n\tconst handleClose = () => {\n\t\tsetIsShow(false);\n\t};\n\n\tconst handleOpen = () => {\n\t\tsetIsShow(true);\n\t};\n\t//const handleToggle = () => (isShow ? handleClose() : handleOpen());\n\n\tuseEffect(() => {\n\t\tif (value.length > 1 && focus) {\n\t\t\thandleOpen();\n\t\t} else handleClose();\n\t\treturn () => handleClose();\n\t}, [value, focus]);\n\n\t//const memoizedValue = useMemo(() => value.length > 1, [value]);\n\n\tconst compositeClassName = clsx(\"ShowInput\", {\n\t\t[className]: className,\n\t\topened: isShow\n\t});\n\n\treturn (\n\t\t<div className={compositeClassName}>\n\t\t\t{children}\n\t\t\t<BlockContainer className=\"ShowInput_Element\">\n\t\t\t\t<Component className=\"ShowInput_Element_Component\" />\n\t\t\t</BlockContainer>\n\t\t</div>\n\t);\n};\n\nShowInput.propTypes = {\n\tclassName: string,\n\tvalue: string,\n\tfocus: bool\n};\n\nexport default ShowInput;\n"]},"metadata":{},"sourceType":"script"}